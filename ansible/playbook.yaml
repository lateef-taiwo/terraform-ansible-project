---
- name: Update server, Install and Enable Apache2
  hosts: dev_server
  become: yes
  tasks:
    - name: Update apt repo and cache
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600

    - name: Install Apache
      apt:
        name: apache2
        state: present

    - name: Install the Apache WSGI module
      apt:
        name: libapache2-mod-wsgi
        state: present

    - name: Enable the Apache2 module wsgi
      community.general.apache2_module:
        state: present
        name: wsgi

- name: Install Python3 
  hosts: dev_server
  become: yes
  tasks:
    - name: Install python3
      vars: 
        ansible_python_interpreter: /usr/bin/python3 # use python2 interpreter
      apt: 
        name:
          - python3
        update_cache: yes
        state: present
    - name: Install pip3
      apt:
        name: python3-pip
        state: present

- name: Install and Start Mysql server
  hosts: dev_server
  become: yes
  tasks: 
    - name: Install MySQL Server
      apt:
        name: mysql-server
        state: present

    - name: Start MySQL service
      service:
        name: mysql
        state: started

- name: Install required Python packages and clone GitHub Repository
  hosts: dev_server
  become: yes
  become_user: ubuntu
  become_method: su
  tasks:
    - name: Install Python packages

      pip:
        name:
          - requests
        state: present

    - name: Git Clone Repository
      git:
        repo: https://github.com/lateef-taiwo/HospitalManagementSystem.git
        dest: /home/ubuntu/HospitalManagementSystem
        version: master
        update: yes
        clone: yes
        accept_hostkey: yes
        force: yes

    - name: Ensure the owner of the cloned directory is ubuntu
      file:
        path: /home/ubuntu/HospitalManagementSystem
        owner: ubuntu
        group: ubuntu
        recurse: yes

- name: Check /var/www/html directory
  hosts: dev_server
  become: yes
  tasks:
    - name: Check /var/www/html directory
      file:
       path: /var/www/html
       state: directory
       owner: ubuntu  # Adjust the owner as needed
       group: ubuntu  # Adjust the group as needed
       mode: "0755"

- name: Create symbolic link
  hosts: dev_server
  become: yes
  become_user: ubuntu
  become_method: su
  tasks:
    - name: Create symbolic link
      file:
        src: /home/ubuntu/HospitalManagementSystem
        dest: /var/www/html/HospitalManagementSystem
        state: link

- name: Run Flask Application
  hosts: dev_server
  become: no
  vars:
    playbook_dir: /home/savvytech/Documents/DevOps/Terraform/terraform-ansible-project/ansible
    script_name: flask_app.sh  # Specify the script name here
    remote_user: ubuntu
  tasks:
    - name: Copy the script to the remote server
      copy:
        src: "{{ playbook_dir }}/{{ script_name  }}"
        dest: /home/ubuntu/{{ script_name }}
      #delegate_to: localhost

    - name: Make the script executable
      command: chmod +x /home/ubuntu/{{ script_name }}

    - name: Run the script
      script: ./home/ubuntu/{{ script_name }}
      # remote_src: yes

